@model HTMLHelpers.Models.Persona
@using HTMLHelpers.Models

@{
    ViewBag.Title = "Personas";
}

<h2>Personas</h2>


@using (Html.BeginForm("DetallePersonas","Home")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Persona</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.edad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.edad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.edad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Genero", 
                new SelectList(Enum.GetValues(typeof(Genero))),
                                    "Seleccione",
                                    new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-12">
                    @Html.RadioButtonFor(model => model.EstadoCivil, "Casado") Casado

                    @Html.RadioButtonFor(model => model.EstadoCivil, "Soltero") Soltero

                    @Html.RadioButtonFor(model => model.EstadoCivil, "Viudo") Viudo

                    @Html.RadioButtonFor(model => model.EstadoCivil, "Union Libre") Union Libre

                </div>

            @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
        </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hobbys, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@/*Html.EditorFor(model => model.Hobbys, new { htmlAttributes = new { @class = "form-control" } })*@

                @Html.CheckBox("Hobbys[]", false, new { @value = "Jugar" }) Jugar
                @Html.CheckBox("Hobbys[]", false, new { @value = "Comer" }) Comer
                @Html.CheckBox("Hobbys[]", false, new { @value = "Dormir" }) Dormir
                @Html.CheckBox("Hobbys[]", false, new { @value = "Leer" }) Leer

                @Html.ValidationMessageFor(model => model.Hobbys, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("<- Inicio", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
